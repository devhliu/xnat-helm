apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.XnatWeb.config.xnat_config_name }}
data:
  make-xnat-config.sh: |-
    apk add --no-cache postgresql-client wget
    rm -rf ${CATALINA_HOME}/webapps/*
    mkdir -p \
      ${CATALINA_HOME}/webapps/${TOMCAT_XNAT_FOLDER} \
      ${XNAT_HOME}/config \
      ${XNAT_HOME}/logs \
      ${XNAT_HOME}/plugins \
      ${XNAT_HOME}/work \
      ${XNAT_ROOT}/archive \
      ${XNAT_ROOT}/build \
      ${XNAT_ROOT}/cache \
      ${XNAT_ROOT}/ftp \
      ${XNAT_ROOT}/pipeline \
      ${XNAT_ROOT}/prearchive

    # generate xnat config
    if [ ! -f $XNAT_HOME/config/xnat-conf.properties ]; then
      cat > $XNAT_HOME/config/xnat-conf.properties << EOF
    datasource.driver=$XNAT_DATASOURCE_DRIVER
    datasource.url=$XNAT_DATASOURCE_URL
    datasource.username=$XNAT_DATASOURCE_USERNAME
    datasource.password=$XNAT_DATASOURCE_PASSWORD
    hibernate.dialect=$XNAT_HIBERNATE_DIALECT
    hibernate.hbm2ddl.auto=update
    hibernate.show_sql=false
    hibernate.cache.use_second_level_cache=true
    hibernate.cache.use_query_cache=true
    EOF
    fi

    cd ${CATALINA_HOME}/webapps/
    wget https://api.bitbucket.org/2.0/repositories/xnatdev/xnat-web/downloads/xnat-web-${XNAT_VER}.war
    cd ${TOMCAT_XNAT_FOLDER}
    unzip -o ../xnat-web-${XNAT_VER}.war
    rm -f ../xnat-web-${XNAT_VER}.war
    apk del wget
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.XnatWeb.config.postgres_name }}
data:
  wait-for-postgres.sh: |-
    #!/bin/sh
    # wait-for-postgres.sh

    set -e

    cmd="$@"

    until psql -U "$XNAT_DATASOURCE_USERNAME" -h xnat-db -c '\q'; do
      >&2 echo "Postgres is unavailable - sleeping"
      sleep 5
    done

    >&2 echo "Postgres is up - executing command \"$cmd\""
    exec $cmd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.XnatDb.name }}
data:
  XNAT.sql: |-
    CREATE USER xnat  NOCREATEDB;
    CREATE DATABASE xnat OWNER xnat;
    ALTER USER xnat WITH PASSWORD 'xnat';
