apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.XnatWeb.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.XnatWeb.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.XnatWeb.name }}
    spec:
      containers:
      - env:
        - name: XNAT_VER
          value: {{ .Values.XnatWeb.Env.XNAT_VER }}
        - name: CATALINA_OPTS
          value: {{ .Values.XnatWeb.Env.CatalinaOpts }}
        - name: XNAT_HOME
          value: {{ .Values.XnatWeb.Env.XNAT_HOME }}
        - name: XNAT_ROOT
          value: {{ .Values.XnatWeb.Env.XNAT_ROOT }}
        - name: XNAT_DATASOURCE_DRIVER
          value: {{ .Values.XnatWeb.Env.XNAT_DATASOURCE_DRIVER }}
        - name: XNAT_DATASOURCE_URL
          value: {{ .Values.XnatWeb.Env.XNAT_DATASOURCE_URL }}
        - name: XNAT_DATASOURCE_USERNAME
          value: {{ .Values.XnatWeb.Env.XNAT_DATASOURCE_USERNAME }}
        - name: XNAT_DATASOURCE_PASSWORD
          value: {{ .Values.XnatWeb.Env.XNAT_DATASOURCE_PASSWORD }}
        - name: XNAT_HIBERNATE_DIALECT
          value: {{ .Values.XnatWeb.Env.XNAT_HIBERNATE_DIALECT }}
        - name: TOMCAT_XNAT_FOLDER
          value: {{ .Values.XnatWeb.Env.TOMCAT_XNAT_FOLDER }}
        image: {{ .Values.XnatWeb.image }}
        command: ["/bin/bash", "-c"]
        args: [{{ .Values.XnatWeb.args }}]
        imagePullPolicy: Always
        name: {{ .Values.XnatWeb.name }}
        ports:
        - containerPort: {{ .Values.XnatWeb.ports.web8080 }}
          protocol: TCP
        - containerPort: {{ .Values.XnatWeb.ports.web8000 }}
          protocol: TCP
        - containerPort: {{.Values.XnatWeb.ports.ssh22 }}
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: {{ .Values.XnatWeb.plugins.volumes }}
          name: {{ .Values.XnatWeb.name }}-claim0
        - mountPath: {{ .Values.XnatWeb.logs.volumes }}
          name: {{ .Values.XnatWeb.name }}-claim1
        - mountPath: {{ .Values.XnatWeb.archive.volumes }}
          name: {{ .Values.XnatWeb.name }}-claim2
        - mountPath: {{ .Values.XnatWeb.build.volumes }}
          name: {{ .Values.XnatWeb.name }}-claim3
        - mountPath: {{ .Values.XnatWeb.dockerSock.volumes }}
          name: {{ .Values.XnatWeb.name }}-claim4
        - mountPath: {{ .Values.XnatWeb.config.volumes }}/{{ .Values.XnatWeb.config.xnat_config }}
          subPath: {{ .Values.XnatWeb.config.xnat_config }}
          name: {{ .Values.XnatWeb.config.xnat_config_name }}
        - mountPath: {{ .Values.XnatWeb.config.volumes }}/{{ .Values.XnatWeb.config.postgres }}
          subPath: {{ .Values.XnatWeb.config.postgres }}
          name: {{ .Values.XnatWeb.config.postgres_name }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: {{ .Values.XnatWeb.config.xnat_config_name }}
        configMap:
          name: {{ .Values.XnatWeb.config.xnat_config_name }}
          defaultMode: 0777
      - name: {{ .Values.XnatWeb.config.postgres_name }}
        configMap: 
          name: {{ .Values.XnatWeb.config.postgres_name }}
          defaultMode: 0777
      - name: {{ .Values.XnatWeb.name }}-claim0
        persistentVolumeClaim:
          claimName: {{ .Values.XnatWeb.name }}-claim0
      - name: {{ .Values.XnatWeb.name }}-claim1
        persistentVolumeClaim:
          claimName: {{ .Values.XnatWeb.name }}-claim1
      - name: {{ .Values.XnatWeb.name }}-claim2
        persistentVolumeClaim:
          claimName: {{ .Values.XnatWeb.name }}-claim2
      - name: {{ .Values.XnatWeb.name }}-claim3
        persistentVolumeClaim:
          claimName: {{ .Values.XnatWeb.name }}-claim3
      - name: {{ .Values.XnatWeb.name }}-claim4
        persistentVolumeClaim:
          claimName: {{ .Values.XnatWeb.name }}-claim4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.XnatDb.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.XnatDb.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.XnatDb.name }}
    spec:
      containers:
      - env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: {{ .Values.XnatDb.auth_method }}
        image: {{ .Values.XnatDb.image }}
        imagePullPolicy: Always
        name: {{ .Values.XnatDb.name }}
        ports:
        - containerPort: {{ .Values.XnatDb.ports }}
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: {{ .Values.XnatDb.volumes.data }}
          name: {{ .Values.XnatDb.name }}-claim0
        - mountPath: {{ .Values.XnatDb.volumes.sqlinit }}/{{ .Values.XnatDb.volumes.name }}
          subPath: {{ .Values.XnatDb.volumes.name }}
          name: {{ .Values.XnatDb.name }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: {{ .Values.XnatDb.name }}
        configMap:
          name: {{ .Values.XnatDb.name }}
      - name: {{ .Values.XnatDb.name }}-claim0
        persistentVolumeClaim:
          claimName: {{ .Values.XnatDb.name }}-claim0
