xnatDb:
  name: xnat-db
  authMethod: trust
  image: postgres:11.7-alpine
  storage: 10Gi
  request: 5Gi
  hostPath: /home/nvidia/postgres
  ports: 5432
  init:
    path: /docker-entrypoint-initdb.d
    script: xnat.sql
  volumes:
    data: /var/lib/postgresql/data

xnatWeb:
  name: xnat-web
  env:
    version: '1.7.6'
    catalinaOpts: -Xms128m -Xmx2048m -Dxnat.home=/data/xnat/home -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000
    folders:
      home: /data/xnat/home
      root: /data/xnat
      tomcat: ROOT
    dataSource:
      driver: org.postgresql.Driver
      url: jdbc:postgresql://xnat-db/xnat
      username: xnat
      password: xnat
      dialect: org.hibernate.dialect.PostgreSQL9Dialect
    mq:
      brokerUrl: tcp://xnat-mq:61616
      username: write
      password: password
    multipart:
      maxFileSize: 1073741824
      maxRequestSize: 2147483648
  image: tomcat:7-jre8-alpine
  args: "make-xnat-config.sh && wait-for-postgres.sh /usr/local/tomcat/bin/catalina.sh run"
  config:
    bin: /usr/local/bin
    warFile:
      name: xnat-web-${XNAT_VER}.war
      downloadUrl: https://api.bitbucket.org/2.0/repositories/xnatdev/xnat-web/downloads
    xnat:
      name: xnat-config
      script: make-xnat-config.sh
    postgres:
      name: postgres
      script: wait-for-postgres.sh
  archive:
    request: 5Gi
    hostPath: /home/nvidia/xnat-docker-compose/xnat-data/archive
    storage: 10Gi
    volumes: /data/xnat/archive
  build:
    request: 5Gi
    hostPath: /home/nvidia/xnat-docker-compose/xnat-data/build
    storage: 10Gi
    volumes: /data/xnat/build
  dockerSock:
    request: 5Gi
    hostPath: /var/run/docker.sock
    storage: 10Gi
    volumes: /var/run/docker.sock
  logs:
    request: 5Gi
    hostPath: /home/nvidia/xnat-docker-compose/xnat-data/home/logs
    storage: 10Gi
    volumes: /data/xnat/home/logs
  plugins:
    request: 5Gi
    hostPath: /home/nvidia/xnat-docker-compose/xnat/plugins
    storage: 10Gi
    volumes: /data/xnat/home/plugins
  type: NodePort
  ports:
    nodePort: 30001
    ssh22: 22
    web8080: 8080
    web8081: 8081
    web8000: 8000

xnatMq:
  name: xnat-mq
  image: webcenter/activemq:5.14.3
  ports:
    adminUi: 8161
    mq: 61616
  env:
    config:
      removeDefaultAccount: true
      enabledScheduler: true
      minMemory: 1024
      maxMemory: 4096
    users:
      admin:
        login: admin
        password: password
      write:
        login: write
        password: password
      read:
        login: read
        password: password
      jmx:
        login: jmx
        password: password
  volumes:
    data: /data
  storage: 1Gi
  request: 500Mi
  hostPath: /home/nvidia/xnat-docker-compose/mq-data

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
